{% extends "en-us/PageLayout.htm" %}

{%- block htmTitlePageLayout %}
{%- block htmTitleFeedPage %}
    <title>{% if resultCount == 0 %}no Feed found{% else %}Feeds{% endif %}</title>
{%- endblock htmTitleFeedPage %}
{%- endblock htmTitlePageLayout %}

{%- block htmStylesPageLayout %}
{{ super() }}
    <link rel="stylesheet" href="{{ staticBaseUrl }}/css/en-us/search/feed/Feed.css"/>
{%- block htmStylesFeedPage %}
{%- endblock htmStylesFeedPage %}
{%- endblock htmStylesPageLayout %}

{%- block htmStylePageLayout %}
      :root {
        --site-results-number-of-columns: 3;
      }
{{ super() }}
{%- block htmStyleFeedPage %}
{%- endblock htmStyleFeedPage %}
{%- endblock htmStylePageLayout %}

{%- block htmScriptsPageLayout %}
{{ super() }}
{%- block htmScriptsFeedPage %}
    <script src="{{staticBaseUrl}}/js/en-us/search/feed/Feed.js"></script>
    <script type="module" src="{{staticBaseUrl}}/js/en-us/search/feed/FeedSearchPage.js"></script>
{%- endblock htmScriptsFeedPage %}
{%- endblock htmScriptsPageLayout %}

{%- block htmScriptPageLayout %}
{%- block htmScriptFeedPage %}
    <script>

      function jsWebsocketFeed(entityShortId, vars, $response) {
{%- block jsWebsocketFeedPage %}{%- endblock %}
      }

      function jsTooltipFeed(e, feature) {
{%- block jsTooltipFeedPage %}{%- endblock %}
      }

      function htmTooltipFeed(feature, layer) {
        return `{%- block htmTooltipFeedPage %}
<h3><wa-icon class="{{ classIconCssClasses }}  "></wa-icon><a href="${quoteattr(feature.properties.editPage)}">${feature.properties.objectTitle}</a></h3>
{%- endblock htmTooltipFeedPage %}`;
      }

      function jsLegendFeed(map) {
{%- block jsLegendFeedPage %}
        var div = L.DomUtil.create('div', 'info legend');
        var htm = '';
        window.listFeed.forEach((result, index) => {
          if(result.location) {
            var shapes = [];
            if(Array.isArray(result.location))
              shapes = shapes.concat(result.location);
            else
              shapes.push(result.location);
            shapes.forEach(function(shape, index) {
              htm += htmLegendFeed(map, shape, result, index, shapes.length);
            });
          }
          if(result.areaServed) {
            var shapes = [];
            if(Array.isArray(result.areaServed))
              shapes = shapes.concat(result.areaServed);
            else
              shapes.push(result.areaServed);
            shapes.forEach(function(shape, index) {
              htm += htmLegendFeed(map, shape, result, index, shapes.length);
            });
          }
        });
        div.innerHTML = htm;
        return div;
{%- endblock jsLegendFeedPage %}
      }

      function htmLegendFeed(map, shape, result, index, count) {
        var color = result.areaServedColors[index];
        var title = result.areaServedTitles[index];
        var url = result.areaServedLinks[index];
        var htm = '';
        htm += `<div class="cursor-pointer " style="max-width: 400px; ">
`;
        htm += `{%- block htmLegendFeedPage %}
    <div title="${quoteattr(title)}">
    <div style="width: 20px; ">
      <wa-icon class="{{ FONTAWESOME_STYLE }} fa-circle" style="color: ${color}; "></wa-icon>
    </div>
    <div class="text-overflow-ellipsis ">
      <span class="" data-solrId="${result.solrId}" onclick="window.mapLayers[this.getAttribute('data-solrId')].openPopup(); return false;" href="">${title}</span>
    </div>
    </div>
{%- endblock htmLegendFeedPage %}`;
        htm += `
</div>
`;
        return htm;
      }

      function jsStyleFeed(feature) {
{%- block jsStyleFeedPage %}
        if(feature.geometry.type == 'Point') {
          return {
            radius: 8
            , fillColor: (feature.properties.areaServedColors && feature.properties.areaServedColors[feature.index] ? feature.properties.areaServedColors[feature.index] : (feature.properties.color ? feature.properties.color : '#000'))
            , color: (feature.properties.areaServedColors && feature.properties.areaServedColors[feature.index] ? feature.properties.areaServedColors[feature.index] : (feature.properties.color ? feature.properties.color : '#000'))
            , weight: 1
            , opacity: 0.7
            , fillOpacity: 0.7
            , contextmenu: true
            , contextmenuItems: [
              {
                text: 'Show coordinates'
                , callback: function(event) {
                  alert(event2.target.getLatLngs());
                }
              }
            ]
          };
        } else if(feature.geometry.type == 'LineString') {
          return {
            color: (feature.properties.areaServedColors && feature.properties.areaServedColors[feature.index] ? feature.properties.areaServedColors[feature.index] : (feature.properties.color ? feature.properties.color : '#000'))
            , weight: 5
            , opacity: 0.7
          };
        } else {
          return {
             fillColor: (feature.properties.areaServedColors && feature.properties.areaServedColors[feature.index] ? feature.properties.areaServedColors[feature.index] : (feature.properties.color ? feature.properties.color : '#000'))
            , color: (feature.properties.areaServedColors && feature.properties.areaServedColors[feature.index] ? feature.properties.areaServedColors[feature.index] : (feature.properties.color ? feature.properties.color : '#000'))
            , weight: 3
            , opacity: 0.7
            , fillOpacity: 0.7
          };
        }
{%- endblock jsStyleFeedPage %}
      }
    </script>
    <script type="module">
{% if DEFAULT_MAP_LOCATION is defined %}
      window.DEFAULT_MAP_LOCATION = { type: 'Point', coordinates: [ {{ DEFAULT_MAP_LOCATION.coordinates[0] }}, {{ DEFAULT_MAP_LOCATION.coordinates[1] }} ]};
{% endif %}
{% if DEFAULT_MAP_ZOOM is defined %}
      window.DEFAULT_MAP_ZOOM = {{ DEFAULT_MAP_ZOOM }};
{% endif %}
      window.DEFAULT_ZONE_ID = '{{ defaultZoneId }}';
      Promise.all([
        customElements.whenDefined('wa-button')
        , customElements.whenDefined('wa-input')
        , customElements.whenDefined('wa-select')
      ]).then(() => {

        var entityShortId = {% if result.entityShortId is defined %}{{ result.entityShortId | tojson }}{% else %}null{% endif %};

        if(entityShortId == null) {
          document.querySelector('#grid-toggle-details')?.addEventListener('click', () => {
            document.querySelector('#site-results-grid').classList.remove('grid-mode-list', 'grid-mode-card');
            document.querySelector('#site-results-grid').classList.add('grid-mode-details');
          });
          document.querySelector('#grid-toggle-list')?.addEventListener('click', () => {
            document.querySelector('#site-results-grid').classList.remove('grid-mode-details', 'grid-mode-card');
            document.querySelector('#site-results-grid').classList.add('grid-mode-list');
          });
          document.querySelector('#grid-toggle-card')?.addEventListener('click', () => {
            document.querySelector('#site-results-grid').classList.remove('grid-mode-details', 'grid-mode-list');
            document.querySelector('#site-results-grid').classList.add('grid-mode-card');
          });
        } else {
          var o = document.querySelector('.pageForm .result')?.value;
          if(o)
            window.result = JSON.parse(o);
        {% if result.entityShortId is defined %}
        {% endif %}
        }
        var l = document.querySelector('.pageForm .listFeed')?.value;
        if(l)
          window.listFeed = JSON.parse(l);
        window.varsFq = JSON.parse('{{ toJsonObjectStringInApostrophes(varsFq) }}');
        window.varsRange = JSON.parse('{{ toJsonObjectStringInApostrophes(varsRange) }}');
        window.defaultRangeVar = '{{ defaultRangeVar }}';
        pageGraphFeed();
        {% for key, value in varsQ.items() %}

        document.querySelector('#qFeed_{{ key }}')?.addEventListener('wa-{% if var == 'objectSuggest' %}keyup{% else %}change{% endif %}', event => {
          qChange('Feed', event.target, document.querySelector('#qFeedDiv_{{ key }}'));
        });
        {% endfor %}

        document.querySelector('#qFeed_rows')?.addEventListener('change', event => {
          paramChange('Feed', event.target, document.querySelector('#qFeedDiv_rows'));
        });

        document.querySelector('#qFeed_start')?.addEventListener('change', event => {
          paramChange('Feed', event.target, document.querySelector('#qFeedDiv_start'));
        });


        var submitForm_patchFeed = document.querySelector('#htmForm_patchFeed')?.addEventListener('submit', event => {
          event.preventDefault();
          return false;
        });
        document.querySelector('#htmFormButton_patchFeed')?.addEventListener('click', event => {
          event.preventDefault();
          patchFeed(null, document.querySelector('#htmForm_patchFeed'), document.querySelector('#htmFormButton_patchFeed'), event.target.getAttribute('data-entityShortId'));
          return false;
        });

        var submitForm_postFeed = document.querySelector('#htmForm_postFeed')?.addEventListener('submit', event => {
          event.preventDefault();
          return false;
        });
        document.querySelector('#htmFormButton_postFeed')?.addEventListener('click', event => {
          event.preventDefault();
          postFeed(document.querySelector('#htmForm_postFeed')
          , document.querySelector('#htmFormButton_postFeed')
          , (json, target) => {
            window.location.href = json.editPage;
          });
          return false;
        });

        var submitForm_deleteFeed = document.querySelector('#htmForm_deleteFeed')?.addEventListener('submit', event => {
          event.preventDefault();
          return false;
        });
        document.querySelector('#htmFormButton_deleteFeed')?.addEventListener('click', event => {
          event.preventDefault();
          deleteFeed(event.target, event.target.getAttribute('data-entityShortId'));
          return false;
        });

        var submitForm_putimportFeed = document.querySelector('#htmForm_putimportFeed')?.addEventListener('submit', event => {
          event.preventDefault();
          return false;
        });
        document.querySelector('#htmFormButton_putimportFeed')?.addEventListener('click', event => {
          event.preventDefault();
          putimportFeed(document.querySelector('#htmForm_putimportFeed'), document.querySelector('#htmFormButton_putimportFeed'));
          return false;
        });

        var submitForm_searchpageFeed = document.querySelector('#htmForm_searchpageFeed')?.addEventListener('submit', event => {
          event.preventDefault();
          return false;
        });
        document.querySelector('#htmFormButton_searchpageFeed')?.addEventListener('click', event => {
          event.preventDefault();
          searchpageFeed();
          return false;
        });

        var submitForm_deletefilterFeed = document.querySelector('#htmForm_deletefilterFeed')?.addEventListener('submit', event => {
          event.preventDefault();
          return false;
        });
        document.querySelector('#htmFormButton_deletefilterFeed')?.addEventListener('click', event => {
          event.preventDefault();
          deletefilterFeed(event.target);
          return false;
        });
{%- block htmScriptInitFeedPage %}{%- endblock htmScriptInitFeedPage %}
      });
    </script>
{%- endblock htmScriptFeedPage %}
{%- endblock htmScriptPageLayout %}

{%- block websocketPageLayout %}
{%- block websocketFeedPage %}
{% if resultCount > 0 %}
        window.eventBus = new EventBus('/eventbus');
        window.eventBus.enableReconnect(true);
        websocketFeed(websocketFeedInner);
{% endif %}
{%- endblock websocketFeedPage %}
{%- endblock websocketPageLayout %}

{%- block htmUrlFeedPage %}{{pageUri}}?q={{query.q}}&amp;rows={% if rows is defined %}{{rows}}{% else %}{{pagination.rows}}{% endif %}&amp;rows={% if start is defined %}{{start}}{% else %}{{pagination.start}}{% endif %}{% for item query.fq %}{% if fq == item %}{% else %}&fq={{fq}}:{{val}}{% endif %}{% endfor %}{% for item in query.sort %}{% if sort == item %}{% else %}&sort={{var}} {{order}}{% endif %}{% endfor %}{%- endblock htmUrlFeedPage %}

{%- block htmBodyStartPageLayout %}
{{ super() }}
{%- block htmBodyStartFeedPage %}
{%- endblock htmBodyStartFeedPage %}
{%- endblock htmBodyStartPageLayout %}

{%- block htmBodyMiddlePageLayout %}
{%- block htmBodyMiddleFeedPage %}
{% if resultCount == 0 %}
        <div class="wa-stack ">
          <wa-tooltip for="return-to-Feed">back to all Feeds</wa-tooltip></wa-tooltip>
          <wa-breadcrumb>
            <wa-breadcrumb-item id="return-to-Feed" variant="brand" href="{{ SITE_BASE_URL }}{{ pageUri }}">
              <i class="fa-duotone fa-regular fa-fish-cooked"></i>
              all Feeds
            </wa-breadcrumb-item>
            <wa-breadcrumb-item>
              no Feed found
            </wa-breadcrumb-item>
          </wa-breadcrumb>
          <div class="wa-stack wa-align-items-center ">
            <div class="wa-heading-3xl ">
              <i class="fa-duotone fa-regular fa-fish-cooked"></i>
            </div>
            <span class="wa-heading-m ">no Feed found</span>
            <p class="wa-caption-l ">Feed tak for a group of animals</p>
{% include en-us/search/feed/FeedSearchForm.htm %}
          </div>
        </div>
{% else %}
{%- include en-us/search/feed/FeedSidebar.htm %}
{%- include en-us/search/feed/FeedSuggestedSearch.htm %}
          <div>
            <form action="/en-us/api/feed" id="FeedForm" class="pageForm " onsubmit="event.preventDefault(); return false; ">
              <input name="focusId" type="hidden"/>
              <input name="pageResponse" id="pageResponse" class="pageResponse"  value='{{ toJsonObjectStringInApostrophes(pageResponse) }}' type="hidden"/>
              <input name="listFeed" id="listFeed" class="listFeed"  value='{{ toJsonArrayStringInApostrophes(listFeed) }}' type="hidden"/>
            </form>
            <div id="site-calendar-box">
              <div id="site-calendar"><!-- // --></div>
            </div>
            <div class="wa-stack wa-gap-m ">
              <wa-tooltip for="return-to-Feed">back to all Feeds</wa-tooltip>
              <wa-breadcrumb>
                <wa-breadcrumb-item id="return-to-Feed" variant="brand" href="{{ SITE_BASE_URL }}{{ pageUri }}">
                  <i class="fa-duotone fa-regular fa-fish-cooked"></i>
                  all Feeds
                </wa-breadcrumb-item>
                <wa-breadcrumb-item>
                  search Feeds
                </wa-breadcrumb-item>
              </wa-breadcrumb>
{% include en-us/search/feed/FeedSearchForm.htm %}
{% include en-us/search/feed/FeedSearchButtons.htm %}
              <div class="wa-stack wa-gap-0 ">
{% include en-us/search/feed/FeedPaginationButtons.htm %}
                <div class="card-like-thing background-color-surface-border" id="site-results-grid">
                  <div>
              <wa-dropdown id="htmDropdown-name">
                <wa-button variant="brand" slot="trigger" caret>name</wa-button>
                <wa-menu>
                  <wa-menu-item onclick="var e = document.querySelector('#pageFacetSortFeed_name'); e.value = this.getAttribute('data-order'); document.querySelectorAll('.pageSearchVal-pageSort-Feed').forEach(e => e.remove()); e.dispatchEvent(new Event('change', {})); " data-action="sort" data-order="asc" id="htmDropdown-name-asc">
                    <wa-icon class="{{ FONTAWESOME_STYLE }} fa-arrow-down-a-z"></wa-icon>
                    sort by name ascending
                  </wa-menu-item>
                  <wa-menu-item onclick="var e = document.querySelector('#pageFacetSortFeed_name'); e.value = this.getAttribute('data-order'); document.querySelectorAll('.pageSearchVal-pageSort-Feed').forEach(e => e.remove()); e.dispatchEvent(new Event('change', {})); " data-action="sort" data-order="desc" id="htmDropdown-name-desc">
                    <wa-icon class="{{ FONTAWESOME_STYLE }} fa-arrow-down-z-a"></wa-icon>
                    sort by name descending
                  </wa-menu-item>
                </wa-menu>
              </wa-dropdown>
              <wa-dropdown id="htmDropdown-description">
                <wa-button variant="brand" slot="trigger" caret>description</wa-button>
                <wa-menu>
                  <wa-menu-item onclick="var e = document.querySelector('#pageFacetSortFeed_description'); e.value = this.getAttribute('data-order'); document.querySelectorAll('.pageSearchVal-pageSort-Feed').forEach(e => e.remove()); e.dispatchEvent(new Event('change', {})); " data-action="sort" data-order="asc" id="htmDropdown-description-asc">
                    <wa-icon class="{{ FONTAWESOME_STYLE }} fa-arrow-down-a-z"></wa-icon>
                    sort by description ascending
                  </wa-menu-item>
                  <wa-menu-item onclick="var e = document.querySelector('#pageFacetSortFeed_description'); e.value = this.getAttribute('data-order'); document.querySelectorAll('.pageSearchVal-pageSort-Feed').forEach(e => e.remove()); e.dispatchEvent(new Event('change', {})); " data-action="sort" data-order="desc" id="htmDropdown-description-desc">
                    <wa-icon class="{{ FONTAWESOME_STYLE }} fa-arrow-down-z-a"></wa-icon>
                    sort by description descending
                  </wa-menu-item>
                </wa-menu>
              </wa-dropdown>
              <div></div>
                  </div>
                  {% for item in listFeed%}
                  <div>
              <a href="{{ item.displayPage }}">
                <i class="fa-duotone fa-regular fa-fish-cooked"></i>
              <span>{{ item.name | e }}
</span>              </a>
              <a href="{{ item.displayPage }}">
              <span>{{ item.description | e }}
</span>              </a>
              <wa-button variant="brand"
                  id="{{classApiMethodMethod}}_editPage"
                  placeholder="[String] edit"
                  label="edit"
                  title="Edit this"
                  class="button-on-left {{classApiMethodMethod}}_editPage classFeed inputFeed{{ result.entityShortId }}EditPage "
                  name="setEditPage"
                  href="{{ item.editPage | e }}"
                  >
                <i class="fa-duotone fa-regular fa-pen-to-square"></i>
                edit
              </wa-button>
                  </div>
                  {% endfor %}
              {% if getColumnName is defined %}
                <div>
                </div>
              {% endif %}
              {% if getColumnDescription is defined %}
                <div>
                </div>
              {% endif %}
              {% if getColumnEditPage is defined %}
                <div>
                </div>
              {% endif %}
                </div>
{% include en-us/search/feed/FeedPaginationButtons.htm %}
              </div>
            </div>
          </div>
{% endif %}
{%- endblock htmBodyMiddleFeedPage %}
{%- endblock htmBodyMiddlePageLayout %}

{%- block htmBodyEndPageLayout %}
  {{ super() }}
{%- block htmBodyEndFeedPage %}
{%- endblock htmBodyEndFeedPage %}
{%- endblock htmBodyEndPageLayout %}
