{% extends "en-us/PageLayout.htm" %}

{%- block htmTitlePageLayout %}
{%- block htmTitleFeedingOperationPage %}
    <title>{% if resultCount == 0 %}no FeedingOperation found{% else %}FeedingOperations{% endif %}</title>
{%- endblock htmTitleFeedingOperationPage %}
{%- endblock htmTitlePageLayout %}

{%- block htmStylesPageLayout %}
{{ super() }}
    <link rel="stylesheet" href="{{ staticBaseUrl }}/css/en-us/search/feeding-operation/FeedingOperation.css"/>
{%- block htmStylesFeedingOperationPage %}
{%- endblock htmStylesFeedingOperationPage %}
{%- endblock htmStylesPageLayout %}

{%- block htmStylePageLayout %}
{{ super() }}
{%- block htmStyleFeedingOperationPage %}
{%- endblock htmStyleFeedingOperationPage %}
{%- endblock htmStylePageLayout %}

{%- block htmScriptsPageLayout %}
{{ super() }}
{%- block htmScriptsFeedingOperationPage %}
    <script src="{{staticBaseUrl}}/js/en-us/search/feeding-operation/FeedingOperation.js"></script>
    <script type="module" src="{{staticBaseUrl}}/js/en-us/search/feeding-operation/FeedingOperationSearchPage.js"></script>
{%- endblock htmScriptsFeedingOperationPage %}
{%- endblock htmScriptsPageLayout %}

{%- block htmScriptPageLayout %}
{%- block htmScriptFeedingOperationPage %}
    <script>

      function jsWebsocketFeedingOperation(entityShortId, vars, $response) {
{%- block jsWebsocketFeedingOperationPage %}{%- endblock %}
      }

      function jsTooltipFeedingOperation(e, feature) {
{%- block jsTooltipFeedingOperationPage %}{%- endblock %}
      }

      function htmTooltipFeedingOperation(feature, layer) {
        return `{%- block htmTooltipFeedingOperationPage %}
<h3><i class="{{ classIconCssClasses }}  "></i><a href="${quoteattr(feature.properties.editPage)}">${feature.properties.title}</a></h3>
{%- endblock htmTooltipFeedingOperationPage %}`;
      }

      function jsLegendFeedingOperation(map) {
{%- block jsLegendFeedingOperationPage %}
        var div = L.DomUtil.create('div', 'info legend');
        var htm = '';
        window.listFeedingOperation.forEach((result, index) => {
          if(result.location) {
            var shapes = [];
            if(Array.isArray(result.location))
              shapes = shapes.concat(result.location);
            else
              shapes.push(result.location);
            shapes.forEach(function(shape, index) {
              htm += htmLegendFeedingOperation(map, shape, result, index, shapes.length);
            });
          }
          if(result.areaServed) {
            var shapes = [];
            if(Array.isArray(result.areaServed))
              shapes = shapes.concat(result.areaServed);
            else
              shapes.push(result.areaServed);
            shapes.forEach(function(shape, index) {
              htm += htmLegendFeedingOperation(map, shape, result, index, shapes.length);
            });
          }
        });
        div.innerHTML = htm;
        return div;
{%- endblock jsLegendFeedingOperationPage %}
      }

      function htmLegendFeedingOperation(map, shape, result, index, count) {
        var color = result.areaServedColors[index];
        var title = result.areaServedTitles[index];
        var url = result.areaServedLinks[index];
        var htm = '';
        htm += `<div class="cursor-pointer " style="max-width: 400px; ">
`;
        htm += `{%- block htmLegendFeedingOperationPage %}
    <div title="${quoteattr(title)}">
    <div style="width: 20px; ">
      <i class="{{ FONTAWESOME_STYLE }} fa-circle" style="color: ${color}; "></i>
    </div>
    <div class="text-overflow-ellipsis ">
      <span class="" data-solrId="${result.solrId}" onclick="window.mapLayers[this.getAttribute('data-solrId')].openPopup(); return false;" href="">${title}</span>
    </div>
    </div>
{%- endblock htmLegendFeedingOperationPage %}`;
        htm += `
</div>
`;
        return htm;
      }

      function jsStyleFeedingOperation(feature) {
{%- block jsStyleFeedingOperationPage %}
        if(feature.geometry.type == 'Point') {
          return {
            radius: 8
            , fillColor: (feature.properties.areaServedColors && feature.properties.areaServedColors[feature.index] ? feature.properties.areaServedColors[feature.index] : (feature.properties.color ? feature.properties.color : '#000'))
            , color: (feature.properties.areaServedColors && feature.properties.areaServedColors[feature.index] ? feature.properties.areaServedColors[feature.index] : (feature.properties.color ? feature.properties.color : '#000'))
            , weight: 1
            , opacity: 0.7
            , fillOpacity: 0.7
            , contextmenu: true
            , contextmenuItems: [
              {
                text: 'Show coordinates'
                , callback: function(event) {
                  alert(event2.target.getLatLngs());
                }
              }
            ]
          };
        } else if(feature.geometry.type == 'LineString') {
          return {
            color: (feature.properties.areaServedColors && feature.properties.areaServedColors[feature.index] ? feature.properties.areaServedColors[feature.index] : (feature.properties.color ? feature.properties.color : '#000'))
            , weight: 5
            , opacity: 0.7
          };
        } else {
          return {
             fillColor: (feature.properties.areaServedColors && feature.properties.areaServedColors[feature.index] ? feature.properties.areaServedColors[feature.index] : (feature.properties.color ? feature.properties.color : '#000'))
            , color: (feature.properties.areaServedColors && feature.properties.areaServedColors[feature.index] ? feature.properties.areaServedColors[feature.index] : (feature.properties.color ? feature.properties.color : '#000'))
            , weight: 3
            , opacity: 0.7
            , fillOpacity: 0.7
          };
        }
{%- endblock jsStyleFeedingOperationPage %}
      }
    </script>
    <script type="module">
{% if DEFAULT_MAP_LOCATION is defined %}
      window.DEFAULT_MAP_LOCATION = { type: 'Point', coordinates: [ {{ DEFAULT_MAP_LOCATION.coordinates[0] }}, {{ DEFAULT_MAP_LOCATION.coordinates[1] }} ]};
{% endif %}
{% if DEFAULT_MAP_ZOOM is defined %}
      window.DEFAULT_MAP_ZOOM = {{ DEFAULT_MAP_ZOOM }};
{% endif %}
      window.DEFAULT_ZONE_ID = '{{ defaultZoneId }}';
      Promise.all([
        customElements.whenDefined('wa-button')
        , customElements.whenDefined('wa-input')
      ]).then(() => {

        var entityShortId = {% if result.entityShortId is defined %}{{ result.entityShortId | tojson }}{% else %}null{% endif %};

        if(entityShortId == null) {
          document.querySelector('#grid-toggle-details')?.addEventListener('click', () => {
            document.querySelector('#site-results-grid').classList.remove('grid-mode-list', 'grid-mode-card');
            document.querySelector('#site-results-grid').classList.add('grid-mode-details');
          });
          document.querySelector('#grid-toggle-list')?.addEventListener('click', () => {
            document.querySelector('#site-results-grid').classList.remove('grid-mode-details', 'grid-mode-card');
            document.querySelector('#site-results-grid').classList.add('grid-mode-list');
          });
          document.querySelector('#grid-toggle-card')?.addEventListener('click', () => {
            document.querySelector('#site-results-grid').classList.remove('grid-mode-details', 'grid-mode-list');
            document.querySelector('#site-results-grid').classList.add('grid-mode-card');
          });
        } else {
          var o = document.querySelector('.pageForm .result')?.value;
          if(o)
            window.result = JSON.parse(o);
        {% if entityShortId is defined %}
        {% endif %}
        }
        var l = document.querySelector('.pageForm .listFeedingOperation')?.value;
        if(l)
          window.listFeedingOperation = JSON.parse(l);
        window.varsFq = JSON.parse('{{ toJsonObjectStringInApostrophes(varsFq) }}');
        window.varsRange = JSON.parse('{{ toJsonObjectStringInApostrophes(varsRange) }}');
        window.defaultRangeVar = '{{ defaultRangeVar }}';
        pageGraphFeedingOperation();
        {% for key, value in varsQ.items() %}

        document.querySelector('#qFeedingOperation_{{ key }}')?.addEventListener('wa-{% if var == 'objectSuggest' %}keyup{% else %}change{% endif %}', event => {
          qChange('FeedingOperation', event.target, document.querySelector('#qFeedingOperationDiv_{{ key }}'));
        });
        {% endfor %}

        document.querySelector('#qFeedingOperation_rows')?.addEventListener('change', event => {
          paramChange('FeedingOperation', event.target, document.querySelector('#qFeedingOperationDiv_rows'));
        });

        document.querySelector('#qFeedingOperation_start')?.addEventListener('change', event => {
          paramChange('FeedingOperation', event.target, document.querySelector('#qFeedingOperationDiv_start'));
        });


        var submitForm_patchFeedingOperation = document.querySelector('#htmForm_patchFeedingOperation')?.addEventListener('submit', event => {
          event.preventDefault();
          return false;
        });
        document.querySelector('#htmFormButton_patchFeedingOperation')?.addEventListener('click', event => {
          event.preventDefault();
          patchFeedingOperation(null, document.querySelector('#htmForm_patchFeedingOperation'), document.querySelector('#htmFormButton_patchFeedingOperation'), event.target.getAttribute('data-entityShortId'));
          return false;
        });

        var submitForm_postFeedingOperation = document.querySelector('#htmForm_postFeedingOperation')?.addEventListener('submit', event => {
          event.preventDefault();
          return false;
        });
        document.querySelector('#htmFormButton_postFeedingOperation')?.addEventListener('click', event => {
          event.preventDefault();
          postFeedingOperation(document.querySelector('#htmForm_postFeedingOperation'), document.querySelector('#htmFormButton_postFeedingOperation'), (response, target) => { response.json().then((json) => { window.location.href = json.editPage; }); });
          return false;
        });

        var submitForm_deleteFeedingOperation = document.querySelector('#htmForm_deleteFeedingOperation')?.addEventListener('submit', event => {
          event.preventDefault();
          return false;
        });
        document.querySelector('#htmFormButton_deleteFeedingOperation')?.addEventListener('click', event => {
          event.preventDefault();
          deleteFeedingOperation(event.target, event.target.getAttribute('data-entityShortId'));
          return false;
        });

        var submitForm_putimportFeedingOperation = document.querySelector('#htmForm_putimportFeedingOperation')?.addEventListener('submit', event => {
          event.preventDefault();
          return false;
        });
        document.querySelector('#htmFormButton_putimportFeedingOperation')?.addEventListener('click', event => {
          event.preventDefault();
          putimportFeedingOperation(document.querySelector('#htmForm_putimportFeedingOperation'), document.querySelector('#htmFormButton_putimportFeedingOperation'));
          return false;
        });

        var submitForm_searchpageFeedingOperation = document.querySelector('#htmForm_searchpageFeedingOperation')?.addEventListener('submit', event => {
          event.preventDefault();
          return false;
        });
        document.querySelector('#htmFormButton_searchpageFeedingOperation')?.addEventListener('click', event => {
          event.preventDefault();
          searchpageFeedingOperation();
          return false;
        });

        var submitForm_deletefilterFeedingOperation = document.querySelector('#htmForm_deletefilterFeedingOperation')?.addEventListener('submit', event => {
          event.preventDefault();
          return false;
        });
        document.querySelector('#htmFormButton_deletefilterFeedingOperation')?.addEventListener('click', event => {
          event.preventDefault();
          deletefilterFeedingOperation(event.target);
          return false;
        });
      });
    </script>
{%- endblock htmScriptFeedingOperationPage %}
{%- endblock htmScriptPageLayout %}

{%- block websocketPageLayout %}
{%- block websocketFeedingOperationPage %}
        window.eventBus = new EventBus('/eventbus');
        window.eventBus.enableReconnect(true);
        websocketFeedingOperation(websocketFeedingOperationInner);
{%- endblock websocketFeedingOperationPage %}
{%- endblock websocketPageLayout %}

{%- block htmUrlFeedingOperationPage %}{{pageUri}}?q={{query.q}}&amp;rows={% if rows is defined %}{{rows}}{% else %}{{pagination.rows}}{% endif %}&amp;rows={% if start is defined %}{{start}}{% else %}{{pagination.start}}{% endif %}{% for item query.fq %}{% if fq == item %}{% else %}&fq={{fq}}:{{val}}{% endif %}{% endfor %}{% for item in query.sort %}{% if sort == item %}{% else %}&sort={{var}} {{order}}{% endif %}{% endfor %}{%- endblock htmUrlFeedingOperationPage %}

{%- block htmBodyStartPageLayout %}
{{ super() }}
{%- block htmBodyStartFeedingOperationPage %}
{% if resultCount > 0 %}
          <h1><a href="{{pageUri}}"><i class="fa-duotone fa-regular fa-fish-cooked"></i> <span>FeedingOperations</span></a></h1>
{%- include en-us/search/feeding-operation/FeedingOperationSuggestedSearch.htm %}
{% include en-us/search/feeding-operation/FeedingOperationSearchButtons.htm %}
{% include en-us/search/feeding-operation/FeedingOperationSearchForm.htm %}
{% endif %}
{%- endblock htmBodyStartFeedingOperationPage %}
{%- endblock htmBodyStartPageLayout %}

{%- block htmBodyMiddlePageLayout %}
{%- block htmBodyMiddleFeedingOperationPage %}
{% if resultCount == 0 %}
        {% if varsFqCount > 0 %}
        <wa-tooltip for="return-to-FeedingOperation">back to all FeedingOperations</wa-tooltip>
          <wa-button id="return-to-FeedingOperation" variant="brand" href="{{ SITE_BASE_URL }}{{ pageUri }}">
            <i class="{{ FONTAWESOME_STYLE }} fa-angle-left"></i>
            all FeedingOperations
          </wa-button>
        </wa-tooltip>
        {% endif %}
        <h1><i class="fa-duotone fa-regular fa-fish-cooked"></i> <span>FeedingOperations</span></h1>
{% include en-us/search/feeding-operation/FeedingOperationSearchButtons.htm %}
{% include en-us/search/feeding-operation/FeedingOperationSearchForm.htm %}
        <h2>
          <span>
  {% if classIconCssClasses is defined %}
            <i class="{{ classIconCssClasses }}  site-menu-icon "></i>
  {% endif %}
            <span class="">no FeedingOperation found</span>
          </span>
        </h2>
{% else %}
{%- include en-us/search/feeding-operation/FeedingOperationSidebar.htm %}
          <form action="/en-us/api/feeding-operation" id="FeedingOperationForm" class="pageForm " onsubmit="event.preventDefault(); return false; ">
            <input name="focusId" type="hidden"/>
            <input name="pageResponse" id="pageResponse" class="pageResponse"  value='{{ toJsonObjectStringInApostrophes(pageResponse) }}' type="hidden"/>
            <input name="listFeedingOperation" id="listFeedingOperation" class="listFeedingOperation"  value='{{ toJsonArrayStringInApostrophes(listFeedingOperation) }}' type="hidden"/>
          </form>
        <div class="pageContent ">
          <div id="site-calendar-box">
            <div id="site-calendar"><!-- // --></div>
          </div>
          {% if varsFqCount > 0 %}
          <div class="margin-block">
            <wa-tooltip for="return-to-FeedingOperation">back to all FeedingOperations</wa-tooltip>
            <wa-button id="return-to-FeedingOperation" variant="brand" href="{{ SITE_BASE_URL }}{{ pageUri }}">
              <i class="{{ FONTAWESOME_STYLE }} fa-angle-left"></i>
              all FeedingOperations
            </wa-button>
          </div>
          {% endif %}
{% include en-us/search/feeding-operation/FeedingOperationPaginationButtons.htm %}
          <div class="card-like-thing background-color-surface-border" id="site-results-grid">
            <div>
              <wa-dropdown id="htmDropdown-name">
                <wa-button variant="brand" slot="trigger" caret>name</wa-button>
                <wa-menu>
                  <wa-menu-item data-action="sort" data-order="asc" id="htmDropdown-name-asc">
                    <i class="{{ FONTAWESOME_STYLE }} fa-arrow-down-a-z"></i>
                    sort by name ascending
                  </wa-menu-item>
                  <wa-menu-item data-action="sort" data-order="desc" id="htmDropdown-name-desc">
                    <i class="{{ FONTAWESOME_STYLE }} fa-arrow-down-z-a"></i>
                    sort by name descending
                  </wa-menu-item>
                </wa-menu>
              </wa-dropdown>
              <wa-dropdown id="htmDropdown-description">
                <wa-button variant="brand" slot="trigger" caret>description</wa-button>
                <wa-menu>
                  <wa-menu-item data-action="sort" data-order="asc" id="htmDropdown-description-asc">
                    <i class="{{ FONTAWESOME_STYLE }} fa-arrow-down-a-z"></i>
                    sort by description ascending
                  </wa-menu-item>
                  <wa-menu-item data-action="sort" data-order="desc" id="htmDropdown-description-desc">
                    <i class="{{ FONTAWESOME_STYLE }} fa-arrow-down-z-a"></i>
                    sort by description descending
                  </wa-menu-item>
                </wa-menu>
              </wa-dropdown>
              <div></div>
            </div>
            {% for item in listFeedingOperation%}
            <div>
              <a href="{{ item.displayPage }}">
                <i class="fa-duotone fa-regular fa-fish-cooked"></i>
              {{ item.name }}
              </a>
              <a href="{{ item.displayPage }}">
              {{ item.description }}
              </a>
              <wa-button variant="brand"
                  id="{{classApiMethodMethod}}_editPage"
                  placeholder="[String] edit"
                  label="edit"
                  title="Edit this"
                  class="button-on-left {{classApiMethodMethod}}_editPage classFeedingOperation inputFeedingOperation{{entityShortId}}EditPage "
                  name="setEditPage"
                  href="{{ item.editPage | e }}"
                  >
                <i class="fa-duotone fa-regular fa-pen-to-square"></i>
                edit
              </wa-button>
            </div>
            {% endfor %}
              {% if getColumnName is defined %}
                <div>
                </div>
              {% endif %}
              {% if getColumnDescription is defined %}
                <div>
                </div>
              {% endif %}
              {% if getColumnEditPage is defined %}
                <div>
                </div>
              {% endif %}
          </div>
        </div>
{% endif %}
{%- endblock htmBodyMiddleFeedingOperationPage %}
{%- endblock htmBodyMiddlePageLayout %}

{%- block htmBodyEndPageLayout %}
  {{ super() }}
{%- block htmBodyEndFeedingOperationPage %}
{%- endblock htmBodyEndFeedingOperationPage %}
{%- endblock htmBodyEndPageLayout %}
