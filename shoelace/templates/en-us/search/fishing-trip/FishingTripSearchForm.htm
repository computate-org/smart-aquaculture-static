{%- macro inputPkFishingTripPage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_pk">
  {%- endif %}
                  <sl-input
                      readonly
                      placeholder="[Long] primary key"
                      label="primary key"
                      type="number"
                      hint="
The primary key of this object in the database"
                      id="{{classApiMethodMethod}}_pk"
  {%- if "Page" == classApiMethodMethod %}
                      data-pk={{ result.pk | tojson }}
                      class="label-on-left {{classApiMethodMethod}}_pk setPk classFishingTrip inputFishingTrip{{ result.pk }}Pk "
                      name="setPk"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_pk setPk classFishingTrip inputFishingTrip{{ result.pk }}Pk "
                      name="setPk"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_pk valuePk classFishingTrip inputFishingTrip{{ result.pk }}Pk "
                      name="pk"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                      value="{{result.pk | e }}"
  {%- endif %}
                      ></sl-input>

  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmPkFishingTripPage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputPkFishingTripPage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputCreatedFishingTripPage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_created">
  {%- endif %}
                  <sl-input
                      type="datetime-local"
                      readonly
                      hint="A created timestamp for this record in the database"
                      label="created {{ formatZonedDateTime(result.created, "'['VV']'", defaultLocaleId, defaultZoneId) | e }}"
                      class="label-on-left {{classApiMethodMethod}}_created datetimepicker setCreated classFishingTrip inputFishingTrip{{ result.pk }}Created "
                      placeholder="MM/dd/yyyy h:mm a '['VV']'"
                      data-timeformat="MM/dd/yyyy h:mm a '['VV']'"
                      id="{{classApiMethodMethod}}_created"
                      value="{%- if "Page" == classApiMethodMethod and result.created is defined %}{{ formatZonedDateTime(result.created, "yyyy-MM-dd'T'HH:mm", defaultLocaleId, defaultZoneId) | e }}{%- endif %}"
  {%- if 'Page' == classApiMethodMethod %}
  {%- endif %}
                      data-pk={{ result.pk | tojson }}
                      data-zone="{{ result.timeZone | e }}"
                      >
                  </sl-input>
  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmCreatedFishingTripPage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputCreatedFishingTripPage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputModifiedFishingTripPage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_modified">
  {%- endif %}
                  <sl-input
                      type="datetime-local"
                      readonly
                      hint="A modified timestamp for this record in the database"
                      label="modified {{ formatZonedDateTime(result.modified, "'['VV']'", defaultLocaleId, defaultZoneId) | e }}"
                      class="label-on-left {{classApiMethodMethod}}_modified datetimepicker setModified classFishingTrip inputFishingTrip{{ result.pk }}Modified "
                      placeholder="MM/dd/yyyy h:mm a '['VV']'"
                      data-timeformat="MM/dd/yyyy h:mm a '['VV']'"
                      id="{{classApiMethodMethod}}_modified"
                      value="{%- if "Page" == classApiMethodMethod and result.modified is defined %}{{ formatZonedDateTime(result.modified, "yyyy-MM-dd'T'HH:mm", defaultLocaleId, defaultZoneId) | e }}{%- endif %}"
  {%- if 'Page' == classApiMethodMethod %}
  {%- endif %}
                      data-pk={{ result.pk | tojson }}
                      data-zone="{{ result.timeZone | e }}"
                      >
                  </sl-input>
  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmModifiedFishingTripPage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputModifiedFishingTripPage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputArchivedFishingTripPage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_archived">
  {%- endif %}
  {%- if 'Page' == classApiMethodMethod %}
                  <sl-button variant="primary" outline
                      id="{{classApiMethodMethod}}_archived"
                      placeholder="archive"
                      label="archive"
                      hint="For archiving this record"
                      class="label-on-left {{classApiMethodMethod}}_archived classFishingTrip inputFishingTrip{{ result.pk }}Archived "
                      name="setArchived"
                      data-pk={{ result.pk | tojson }}
                      data-val="{{ result.archived | e }}"
                      >archive</sl-button>
  {%- else %}
  {%- if 'Page' == classApiMethodMethod %}
                  <sl-checkbox
                      id="{{classApiMethodMethod}}_archived"
                      value="true"
  {%- else %}
                  <sl-select
                      id="{{classApiMethodMethod}}_archived"
  {%- endif %}
                      {% if authForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      placeholder="archive"
                      label="archive"
                      hint="For archiving this record"
  {%- if 'Page' == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_archived classFishingTrip inputFishingTrip{{ result.pk }}Archived "
                      name="setArchived"
  {%- else %}
    {%- if 'Page' == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_archived classFishingTrip inputFishingTrip{{ result.pk }}Archived "
                      name="setArchived"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_archived setArchived valueArchived classFishingTrip inputFishingTrip{{ result.pk }}Archived "
                      name="setArchived"
    {%- endif %}
  {%- endif %}
  {%- if 'Page' == classApiMethodMethod %}
    {%- if result.archived == true %}
                      checked
    {%- endif %}
                      data-pk={{ result.pk | tojson }}
                      >archive</sl-checkbox>
  {%- else %}
                      >
                    <sl-option value=""></sl-option>
                    <sl-option value="true">true</sl-option>
                    <sl-option value="false">false</sl-option>
                  </sl-select>
  {%- endif %}
  {%- endif %}
  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmArchivedFishingTripPage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputArchivedFishingTripPage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputTimeZoneFishingTripPage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_timeZone">
  {%- endif %}
                  <sl-input
                      {% if authForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      placeholder="[String] time zone"
                      label="time zone"
                      hint="
The local time zone the fishing trip departure and arrival dates are based on. "
                      id="{{classApiMethodMethod}}_timeZone"
  {%- if "Page" == classApiMethodMethod %}
                      data-pk={{ result.pk | tojson }}
                      class="label-on-left {{classApiMethodMethod}}_timeZone setTimeZone classFishingTrip inputFishingTrip{{ result.pk }}TimeZone "
                      name="setTimeZone"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_timeZone setTimeZone classFishingTrip inputFishingTrip{{ result.pk }}TimeZone "
                      name="setTimeZone"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_timeZone valueTimeZone classFishingTrip inputFishingTrip{{ result.pk }}TimeZone "
                      name="timeZone"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                      value="{{result.timeZone | e }}"
  {%- endif %}
                      ></sl-input>

  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmTimeZoneFishingTripPage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputTimeZoneFishingTripPage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputDepartureDateFishingTripPage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_departureDate">
  {%- endif %}
                  <sl-input
                      type="datetime-local"
                      {% if authForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      hint="The date and time the fishing trip departed. "
                      label="departure date {{ formatZonedDateTime(result.departureDate, "'['VV']'", defaultLocaleId, defaultZoneId) | e }}"
                      class="label-on-left {{classApiMethodMethod}}_departureDate datetimepicker setDepartureDate classFishingTrip inputFishingTrip{{ result.pk }}DepartureDate "
                      placeholder="MM/dd/yyyy h:mm a '['VV']'"
                      data-timeformat="MM/dd/yyyy h:mm a '['VV']'"
                      id="{{classApiMethodMethod}}_departureDate"
                      value="{%- if "Page" == classApiMethodMethod and result.departureDate is defined %}{{ formatZonedDateTime(result.departureDate, "yyyy-MM-dd'T'HH:mm", defaultLocaleId, defaultZoneId) | e }}{%- endif %}"
  {%- if 'Page' == classApiMethodMethod %}
  {%- endif %}
                      data-pk={{ result.pk | tojson }}
                      data-zone="{{ result.timeZone | e }}"
                      >
                  </sl-input>
  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmDepartureDateFishingTripPage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputDepartureDateFishingTripPage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputArrivalDateFishingTripPage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_arrivalDate">
  {%- endif %}
                  <sl-input
                      type="datetime-local"
                      {% if authForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      hint="The date and time the fishing trip returned. "
                      label="arrival date {{ formatZonedDateTime(result.arrivalDate, "'['VV']'", defaultLocaleId, defaultZoneId) | e }}"
                      class="label-on-left {{classApiMethodMethod}}_arrivalDate datetimepicker setArrivalDate classFishingTrip inputFishingTrip{{ result.pk }}ArrivalDate "
                      placeholder="MM/dd/yyyy h:mm a '['VV']'"
                      data-timeformat="MM/dd/yyyy h:mm a '['VV']'"
                      id="{{classApiMethodMethod}}_arrivalDate"
                      value="{%- if "Page" == classApiMethodMethod and result.arrivalDate is defined %}{{ formatZonedDateTime(result.arrivalDate, "yyyy-MM-dd'T'HH:mm", defaultLocaleId, defaultZoneId) | e }}{%- endif %}"
  {%- if 'Page' == classApiMethodMethod %}
  {%- endif %}
                      data-pk={{ result.pk | tojson }}
                      data-zone="{{ result.timeZone | e }}"
                      >
                  </sl-input>
  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmArrivalDateFishingTripPage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputArrivalDateFishingTripPage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputNameFishingTripPage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_name">
  {%- endif %}
                  <sl-input
                      {% if authForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      placeholder="[String] name"
                      label="name"
                      hint="
The name of this fishing trip. "
                      id="{{classApiMethodMethod}}_name"
  {%- if "Page" == classApiMethodMethod %}
                      data-pk={{ result.pk | tojson }}
                      class="label-on-left {{classApiMethodMethod}}_name setName classFishingTrip inputFishingTrip{{ result.pk }}Name "
                      name="setName"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_name setName classFishingTrip inputFishingTrip{{ result.pk }}Name "
                      name="setName"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_name valueName classFishingTrip inputFishingTrip{{ result.pk }}Name "
                      name="name"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                      value="{{result.name | e }}"
  {%- endif %}
                      ></sl-input>

  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmNameFishingTripPage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputNameFishingTripPage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputDescriptionFishingTripPage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_description">
  {%- endif %}
                  <sl-input
                      {% if authForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      placeholder="[String] description"
                      label="description"
                      hint="
A description of this fishing trip. "
                      id="{{classApiMethodMethod}}_description"
  {%- if "Page" == classApiMethodMethod %}
                      data-pk={{ result.pk | tojson }}
                      class="label-on-left {{classApiMethodMethod}}_description setDescription classFishingTrip inputFishingTrip{{ result.pk }}Description "
                      name="setDescription"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_description setDescription classFishingTrip inputFishingTrip{{ result.pk }}Description "
                      name="setDescription"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_description valueDescription classFishingTrip inputFishingTrip{{ result.pk }}Description "
                      name="description"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                      value="{{result.description | e }}"
  {%- endif %}
                      ></sl-input>

  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmDescriptionFishingTripPage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputDescriptionFishingTripPage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}

{%- macro htmButton_patchFishingTrip() %}<sl-button variant="primary" outline id="htmButton_patchFishingTrip" data-pk={{ result.pk | tojson }}><i slot="prefix" class="{{ FONTAWESOME_STYLE }} fa-edit "></i>Modify</sl-button>{%- endmacro %}

{%- macro htmFormButton_patchFishingTrip() %}
          <sl-popup  auto-size="both" placement="top" id="alertButton_patchFishingTrip" duration="5000" closable class="sl-header-l ">
            <sl-button slot="anchor" variant="primary" outline slot="footer" type="submit"
                 id="htmFormButton_patchFishingTrip"
                >Modify fishing trip</sl-button>
            <sl-badge variant="danger" class="alertPopup" id="alertPopupButton_patchFishingTrip"></sl-badge>
          </sl-popup>
{%- endmacro %}

{%- macro htmForm_patchFishingTrip() %}
        <sl-dialog id="patchFishingTripDialog" label="Modify fishing trip">
          <form id="htmForm_patchFishingTrip" class="round-row primary-smart-border-radius ">
            <sl-details open class="HtmRow" id="departurearrival">
              <div slot="summary">
                <span>departure/arrival</span>
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmTimeZoneFishingTripPage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmTimeZoneFishingTripPage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmTimeZoneFishingTripPage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmDepartureDateFishingTripPage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmDepartureDateFishingTripPage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmDepartureDateFishingTripPage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmArrivalDateFishingTripPage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmArrivalDateFishingTripPage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmArrivalDateFishingTripPage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
            </sl-details>
            <sl-details open class="HtmRow" id="name-and-description">
              <div slot="summary">
                <span>name and description</span>
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmNameFishingTripPage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmNameFishingTripPage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmNameFishingTripPage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmDescriptionFishingTripPage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmDescriptionFishingTripPage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmDescriptionFishingTripPage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
            </sl-details>
          </form>
          {{ htmFormButton_patchFishingTrip() }}
        </sl-dialog>
{%- endmacro %}

{%- macro htmButton_postFishingTrip() %}<sl-button variant="primary" outline id="htmButton_postFishingTrip" data-pk={{ result.pk | tojson }}><i slot="prefix" class="{{ FONTAWESOME_STYLE }} fa-file-plus "></i>Create</sl-button>{%- endmacro %}

{%- macro htmFormButton_postFishingTrip() %}
          <sl-popup  auto-size="both" placement="top" id="alertButton_postFishingTrip" duration="5000" closable class="sl-header-l ">
            <sl-button slot="anchor" variant="primary" outline slot="footer" type="submit"
                 id="htmFormButton_postFishingTrip"
                >Create a fishing trip</sl-button>
            <sl-badge variant="danger" class="alertPopup" id="alertPopupButton_postFishingTrip"></sl-badge>
          </sl-popup>
{%- endmacro %}

{%- macro htmForm_postFishingTrip() %}
        <sl-dialog id="postFishingTripDialog" label="Create a fishing trip">
          <form id="htmForm_postFishingTrip" class="round-row primary-smart-border-radius ">
            <div>You can override any default values below: </div>
            <sl-details open class="HtmRow" id="departurearrival">
              <div slot="summary">
                <span>departure/arrival</span>
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "POST" in scopes %}
                {{ htmTimeZoneFishingTripPage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmTimeZoneFishingTripPage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmTimeZoneFishingTripPage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "POST" in scopes %}
                {{ htmDepartureDateFishingTripPage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmDepartureDateFishingTripPage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmDepartureDateFishingTripPage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "POST" in scopes %}
                {{ htmArrivalDateFishingTripPage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmArrivalDateFishingTripPage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmArrivalDateFishingTripPage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
            </sl-details>
            <sl-details open class="HtmRow" id="name-and-description">
              <div slot="summary">
                <span>name and description</span>
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "POST" in scopes %}
                {{ htmNameFishingTripPage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmNameFishingTripPage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmNameFishingTripPage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "POST" in scopes %}
                {{ htmDescriptionFishingTripPage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmDescriptionFishingTripPage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmDescriptionFishingTripPage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
            </sl-details>
          </form>
          {{ htmFormButton_postFishingTrip() }}
        </sl-dialog>
{%- endmacro %}

{%- macro htmButton_deleteFishingTrip() %}<sl-button variant="primary" outline id="htmButton_deleteFishingTrip" data-pk={{ result.pk | tojson }}><i slot="prefix" class="{{ FONTAWESOME_STYLE }} fa-trash "></i>Delete</sl-button>{%- endmacro %}

{%- macro htmFormButton_deleteFishingTrip() %}
          <sl-popup  auto-size="both" placement="top" id="alertButton_deleteFishingTrip" duration="5000" closable class="sl-header-l ">
            <sl-button slot="anchor" variant="primary" outline slot="footer" type="submit"
                 id="htmFormButton_deleteFishingTrip"
                >Delete fishing trip</sl-button>
            <sl-badge variant="danger" class="alertPopup" id="alertPopupButton_deleteFishingTrip"></sl-badge>
          </sl-popup>
{%- endmacro %}

{%- macro htmForm_deleteFishingTrip() %}
        <sl-dialog id="deleteFishingTripDialog" label="Delete fishing trip">
          <form id="htmForm_deleteFishingTrip" class="round-row primary-smart-border-radius ">
          </form>
          {{ htmFormButton_deleteFishingTrip() }}
        </sl-dialog>
{%- endmacro %}

{%- macro htmButton_putimportFishingTrip() %}<sl-button variant="primary" outline id="htmButton_putimportFishingTrip" data-pk={{ result.pk | tojson }}><i slot="prefix" class="{{ FONTAWESOME_STYLE }} fa-file-import "></i>Import</sl-button>{%- endmacro %}

{%- macro htmFormButton_putimportFishingTrip() %}
          <sl-popup  auto-size="both" placement="top" id="alertButton_putimportFishingTrip" duration="5000" closable class="sl-header-l ">
            <sl-button slot="anchor" variant="primary" outline slot="footer" type="submit"
                 id="htmFormButton_putimportFishingTrip"
                >Import fishing trips</sl-button>
            <sl-badge variant="danger" class="alertPopup" id="alertPopupButton_putimportFishingTrip"></sl-badge>
          </sl-popup>
{%- endmacro %}

{%- macro htmForm_putimportFishingTrip() %}
        <sl-dialog id="putimportFishingTripDialog" label="Import fishing trips">
          <form id="htmForm_putimportFishingTrip" class="round-row primary-smart-border-radius ">
            <div>
              <sl-textarea
                  class="PUTImport_searchList "
                  style="height: 300px; "
                  placeholder="{ 'searchList': [ { 'pk': ... , 'saves': [ ... ] }, ... ] }"
                  >
              </sl-textarea>
            </div>
          </form>
          {{ htmFormButton_putimportFishingTrip() }}
        </sl-dialog>
{%- endmacro %}

{%- macro htmButton_searchpageFishingTrip() %}{%- endmacro %}

{%- macro htmFormButton_searchpageFishingTrip() %}
          <sl-popup  auto-size="both" placement="top" id="alertButton_searchpageFishingTrip" duration="5000" closable class="sl-header-l ">
            <sl-button slot="anchor" variant="primary" outline slot="footer" type="submit"
                 id="htmFormButton_searchpageFishingTrip"
                >Search fishing trips</sl-button>
            <sl-badge variant="danger" class="alertPopup" id="alertPopupButton_searchpageFishingTrip"></sl-badge>
          </sl-popup>
{%- endmacro %}

{%- macro htmForm_searchpageFishingTrip() %}
        <div id="searchpageFishingTripDialog" label="Search fishing trips">
          <div id="htmForm_searchpageFishingTrip" class="round-row primary-smart-border-radius ">
            <sl-details class="HtmRow" id="primary-key-id-created-modified-archive-details">
              <div slot="summary">
                <span>primary key, ID, created, modified, archive details</span>
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmPkFishingTripPage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmPkFishingTripPage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmPkFishingTripPage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmCreatedFishingTripPage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmCreatedFishingTripPage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmCreatedFishingTripPage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmModifiedFishingTripPage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmModifiedFishingTripPage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmModifiedFishingTripPage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmArchivedFishingTripPage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmArchivedFishingTripPage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmArchivedFishingTripPage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
            </sl-details>
            <sl-details open class="HtmRow" id="departurearrival">
              <div slot="summary">
                <span>departure/arrival</span>
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmTimeZoneFishingTripPage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmTimeZoneFishingTripPage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmTimeZoneFishingTripPage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmDepartureDateFishingTripPage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmDepartureDateFishingTripPage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmDepartureDateFishingTripPage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmArrivalDateFishingTripPage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmArrivalDateFishingTripPage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmArrivalDateFishingTripPage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
            </sl-details>
            <sl-details open class="HtmRow" id="name-and-description">
              <div slot="summary">
                <span>name and description</span>
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmNameFishingTripPage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmNameFishingTripPage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmNameFishingTripPage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmDescriptionFishingTripPage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmDescriptionFishingTripPage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmDescriptionFishingTripPage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
            </sl-details>
          </div>
        </div>
{%- endmacro %}

{%- macro htmButton_deletefilterFishingTrip() %}<sl-button variant="primary" outline id="htmButton_deletefilterFishingTrip" data-pk={{ result.pk | tojson }}><i slot="prefix" class="{{ FONTAWESOME_STYLE }} fa-trash "></i>Delete</sl-button>{%- endmacro %}

{%- macro htmFormButton_deletefilterFishingTrip() %}
          <sl-popup  auto-size="both" placement="top" id="alertButton_deletefilterFishingTrip" duration="5000" closable class="sl-header-l ">
            <sl-button slot="anchor" variant="primary" outline slot="footer" type="submit"
                 id="htmFormButton_deletefilterFishingTrip"
                >Delete fishing trip</sl-button>
            <sl-badge variant="danger" class="alertPopup" id="alertPopupButton_deletefilterFishingTrip"></sl-badge>
          </sl-popup>
{%- endmacro %}

{%- macro htmForm_deletefilterFishingTrip() %}
        <sl-dialog id="deletefilterFishingTripDialog" label="Delete fishing trip">
          <form id="htmForm_deletefilterFishingTrip" class="round-row primary-smart-border-radius ">
          </form>
          {{ htmFormButton_deletefilterFishingTrip() }}
        </sl-dialog>
{%- endmacro %}
          <div id="htmSearchForm">
            <sl-button-group>
{% if AUTH_SCOPE_SUPER_ADMIN in scopes %}
  {% if "PATCH" in scopes %}
    {% if resultCount >= 1 %}
              <sl-button variant="primary" outline id="refreshThisFishingTripGenPage"
                   onclick="patch{{classSimpleName}}Vals( [ {name: 'fq', value: 'pk:{{ result.pk }}' } ], {}, this, function() { addGlow(document.querySelector('#refreshThisFishingTripGenPage')); }, function() { addError(document.querySelector('#refreshThisFishingTripGenPage')); }); return false; ">
                <i slot="prefix" class="{{ FONTAWESOME_STYLE }} fa-sync-alt "></i>
                refresh
              </sl-button>
    {% endif %}
    {% if resultCount > 0 %}
              <sl-button variant="primary" outline id="refreshAllFishingTripGenPage{{ result.pk | e }}"
                   onclick="patch{{classSimpleName}}Vals([], {}, this, function() { addGlow(document.querySelector('#refreshAllFishingTripGenPage{{ result.pk | e }}')); }, function() { addError(document.querySelector('#refreshAllFishingTripGenPage{{ result.pk | e }}')); }); "
                  >
                <i slot="prefix" class="{{ FONTAWESOME_STYLE }} fa-arrows-rotate"></i>
                Refresh all 
              </sl-button>
    {% endif %}
  {% endif %}
{% endif %}
{%- if 'PATCH' in scopes %}
  {%- if resultCount > 0 %}
    {%- if AUTH_SCOPE_SUPER_ADMIN in scopes %}
    {{ htmButton_patchFishingTrip() }}
    {%- endif %}
  {%- endif %}
{%- endif %}
{%- if 'POST' in scopes %}
  {%- if resultCount >= 1 %}
    {{ htmButton_postFishingTrip() }}
  {%- else %}
    {{ htmButton_postFishingTrip() }}
  {%- endif %}
{%- endif %}
{%- if 'DELETE' in scopes %}
  {%- if result is defined %}
    {{ htmButton_deleteFishingTrip() }}
  {%- endif %}
{%- endif %}
{%- if AUTH_SCOPE_SUPER_ADMIN in scopes %}
  {{ htmButton_putimportFishingTrip() }}
{%- endif %}
{%- if 'DELETE' in scopes %}
  {%- if result is not defined %}
    {%- if AUTH_SCOPE_SUPER_ADMIN in scopes %}
    {{ htmButton_deletefilterFishingTrip() }}
    {%- endif %}
  {%- endif %}
{%- endif %}

            </sl-button-group>
          </div>
{%- if 'DELETE' in scopes %}
    {{ htmForm_patchFishingTrip() }}
  {%- endif %}
{%- endif %}
{%- if 'POST' in scopes %}
  {%- if resultCount >= 1 %}
    {{ htmForm_postFishingTrip() }}
  {%- else %}
    {{ htmForm_postFishingTrip() }}
  {%- endif %}
{%- endif %}
{%- if 'DELETE' in scopes %}
  {%- if resultCount >= 1 %}
    {{ htmForm_deleteFishingTrip() }}
  {%- else %}
  {%- endif %}
{%- endif %}
{%- if AUTH_SCOPE_SUPER_ADMIN in scopes %}
  {{ htmForm_putimportFishingTrip() }}
{%- endif %}
{%- if 'DELETE' in scopes %}
  {%- if resultCount >= 1 %}
    {{ htmForm_deletefilterFishingTrip() }}
  {%- else %}
  {%- endif %}
{%- endif %}
